/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenChopPair } from "../TokenChopPair";

export class TokenChopPair__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TokenChopPairLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      TokenChopPair__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: TokenChopPairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__PairFunctions_________________________", "g"),
      linkLibraryAddresses["__PairFunctions_________________________"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _openPrice: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides
  ): Promise<TokenChopPair> {
    return super.deploy(
      _openPrice,
      _fee,
      overrides || {}
    ) as Promise<TokenChopPair>;
  }
  getDeployTransaction(
    _openPrice: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_openPrice, _fee, overrides || {});
  }
  attach(address: string): TokenChopPair {
    return super.attach(address) as TokenChopPair;
  }
  connect(signer: Signer): TokenChopPair__factory {
    return super.connect(signer) as TokenChopPair__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenChopPair {
    return new Contract(address, _abi, signerOrProvider) as TokenChopPair;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_openPrice",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fee",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FEE_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SLICE_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SLICE_POINT_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "closePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "highToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "lowToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "openPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setClosePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getHighTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106c73803806106c78339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050600082116100c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f70656e5072696365206d7573742062652067726561746572207468616e203081525060200191505060405180910390fd5b816002819055508060048190555050506105e4806100e36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ccdf429911610071578063ccdf42991461016a578063ccf288c614610188578063ddca3f43146101a9578063e4ea3fc4146101c7578063f1a640f8146101fb578063f49ea9681461021c576100a9565b80632c3fbb71146100ae5780632dfb66d7146100e25780634a2f2160146101005780634ee60a071461012e578063c79b25021461014c575b600080fd5b6100b661023d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ea610261565b6040518082815260200191505060405180910390f35b61012c6004803603602081101561011657600080fd5b8101908080359060200190929190505050610267565b005b6101366102ca565b6040518082815260200191505060405180910390f35b610154610544565b6040518082815260200191505060405180910390f35b61017261054c565b6040518082815260200191505060405180910390f35b610190610552565b604051808260ff16815260200191505060405180910390f35b6101b1610557565b6040518082815260200191505060405180910390f35b6101cf61055d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610203610583565b604051808260ff16815260200191505060405180910390f35b610224610588565b604051808260ff16815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600081116102c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061058e6021913960400191505060405180910390fd5b8060038190555050565b60008073__PairFunctions_________________________630d5cda706002546003546040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561032857600080fd5b505af415801561033c573d6000803e3d6000fd5b505050506040513d602081101561035257600080fd5b81019080805190602001909291905050509050600073__PairFunctions_________________________635e5ae01b600454846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156103c057600080fd5b505af41580156103d4573d6000803e3d6000fd5b505050506040513d60208110156103ea57600080fd5b81019080805190602001909291905050509050600073__PairFunctions_________________________6307619d23846302faf0806040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561045a57600080fd5b505af415801561046e573d6000803e3d6000fd5b505050506040513d602081101561048457600080fd5b8101908080519060200190929190505050905073__PairFunctions_________________________636c1b7e0a621e84808484876040518563ffffffff1660e01b81526004018085815260200184815260200183815260200182815260200194505050505060206040518083038186803b15801561050157600080fd5b505af4158015610515573d6000803e3d6000fd5b505050506040513d602081101561052b57600080fd5b8101908080519060200190929190505050935050505090565b6302faf08081565b60035481565b600881565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601281565b60088156fe436c6f73655072696365206d7573742062652067726561746572207468616e2030a26469706673582212208da88eefc78f47027e51d12d217653c09ced57b5c7f8f816bf6f60908c98f45d64736f6c63430007060033";

export interface TokenChopPairLibraryAddresses {
  ["__PairFunctions_________________________"]: string;
}
