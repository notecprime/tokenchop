/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PairFunctions } from "../PairFunctions";

export class PairFunctions__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PairFunctions> {
    return super.deploy(overrides || {}) as Promise<PairFunctions>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PairFunctions {
    return super.attach(address) as PairFunctions;
  }
  connect(signer: Signer): PairFunctions__factory {
    return super.connect(signer) as PairFunctions__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PairFunctions {
    return new Contract(address, _abi, signerOrProvider) as PairFunctions;
  }
}

const _abi = [
  {
    inputs: [],
    name: "CHANGE_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_openPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closePrice",
        type: "uint256",
      },
    ],
    name: "priceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "change",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_fee",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_change",
        type: "uint256",
      },
    ],
    name: "calculateProfitSplit",
    outputs: [
      {
        internalType: "int256",
        name: "profitSplit",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_change",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slicePoint",
        type: "uint256",
      },
    ],
    name: "calculateRebalancePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "rebalancePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_highBalance",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_profitSplit",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_rebalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_change",
        type: "uint256",
      },
    ],
    name: "calculateHighClosingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "closingTokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lowBalance",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_profitSplit",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_rebalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_change",
        type: "uint256",
      },
    ],
    name: "calculateLowClosingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "closingTokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61039a610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806307619d23146100715780630d5cda70146100bd5780635e5ae01b146101095780636552b998146101555780636c1b7e0a146101b5578063a1164ec714610215575b600080fd5b6100a76004803603604081101561008757600080fd5b810190808035906020019092919080359060200190929190505050610236565b6040518082815260200191505060405180910390f35b6100f3600480360360408110156100d357600080fd5b810190808035906020019092919080359060200190929190505050610264565b6040518082815260200191505060405180910390f35b61013f6004803603604081101561011f57600080fd5b81019080803590602001909291908035906020019092919050505061027a565b6040518082815260200191505060405180910390f35b61019f6004803603608081101561016b57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102af565b6040518082815260200191505060405180910390f35b6101ff600480360360808110156101cb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102f3565b6040518082815260200191505060405180910390f35b61021d61030d565b604051808260ff16815260200191505060405180910390f35b600080600860ff16600a0a61024d85856008610312565b03905061025b81600061034a565b91505092915050565b600061027282846008610312565b905092915050565b600080829050600860ff16600a0a61029c600860ff16600a0a8303600061034a565b8502816102a557fe5b0591505092915050565b600080600860ff16600a0a858503029050600860ff16600a0a8382816102d157fe5b04600860ff16600a0a600202038702816102e757fe5b04915050949350505050565b60008184840386028161030257fe5b049050949350505050565b600881565b6000806001830160ff16600a0a850290506000600a600586848161033257fe5b04018161033b57fe5b04905080925050509392505050565b60008183121561035a578161035c565b825b90509291505056fea2646970667358221220db0743cda996a57c79b50215c00e0ef87827614419eaafa847e9f1e8c917839564736f6c63430007060033";
