/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockMathLib } from "../MockMathLib";

export class MockMathLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockMathLib> {
    return super.deploy(overrides || {}) as Promise<MockMathLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockMathLib {
    return super.attach(address) as MockMathLib;
  }
  connect(signer: Signer): MockMathLib__factory {
    return super.connect(signer) as MockMathLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMathLib {
    return new Contract(address, _abi, signerOrProvider) as MockMathLib;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061026e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa9a091214610030575b600080fd5b6100706004803603606081101561004657600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610086565b6040518082815260200191505060405180910390f35b600061009384848461009c565b90509392505050565b60007001000000000000000000000000000000008410610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f56616c756520746f6f206c61726765000000000000000000000000000000000081525060200191505060405180910390fd5b70010000000000000000000000000000000083106101aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e756d657261746f7220746f6f206c617267652000000000000000000000000081525060200191505060405180910390fd5b6101cf826101c185876101d890919063ffffffff16565b61021290919063ffffffff16565b90509392505050565b6000808314156101eb576000905061020c565b60008284029050828482816101fc57fe5b041461020757600080fd5b809150505b92915050565b600080821161022057600080fd5b600082848161022b57fe5b049050809150509291505056fea2646970667358221220379ad583a81e46e26600d14f9561ac84652351d82c348f7131d7e0750fda59ff64736f6c63430007060033";
